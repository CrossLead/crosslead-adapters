{"version":3,"sources":["clAdapters/jira/index.js"],"names":["JiraAdapter","prototype","makeRequest","path","protocol","hostname","apiVersion","port","username","password","uri","format","pathname","options","rejectUnauthorized","method","auth","user","pass","getIssueHierarchy","result","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;IAEqBA,W;;;;;;;;;;;kBAAAA,W;;;AAGrBA,YAAYC,SAAZ,CAAsBC,WAAtB;AAAA,wEAAoC,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAClC,sBAAKC,QAAL,GAAgB,OAAhB;AACA,sBAAKC,QAAL,GAAgB,yBAAhB;AACA,sBAAKC,UAAL,GAAkB,CAAlB;AACA,sBAAKC,IAAL,GAAY,IAAZ;AACA,sBAAKC,QAAL,GAAgB,4BAAhB;AACA,sBAAKC,QAAL,GAAgB,cAAhB;;AAEMC,eAR4B,GAQtB,cAAIC,MAAJ,CAAW;AACrBP,wBAAU,UAAKA,QADM;AAErBC,wBAAU,UAAKA,QAFM;AAGrBE,oBAAM,UAAKA,IAHU;AAIrBK,wBAAU,cAAc,UAAKN,UAAnB,GAAgCH;AAJrB,aAAX,CARsB;AAe5BU,mBAf4B,GAelB;AACdC,kCAAoB,IADN;AAEdJ,mBAAKA,GAFS;AAGdK,sBAAQ,KAHM;AAIdC,oBAAM;AACJC,sBAAM,UAAKT,QADP;AAEJU,sBAAM,UAAKT;AAFP;AAJQ,aAfkB;AAAA,6CAyB3B,uBAAQI,OAAR,CAzB2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApC;;AAAA;AAAA;AAAA;AAAA;;AA4BAb,YAAYC,SAAZ,CAAsBkB,iBAAtB,8DAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACnB,UAAKjB,WAAL,CAAiB,kBAAjB,CADmB;;AAAA;AAClCkB,gBADkC;;AAExCC,kBAAQC,GAAR,CAAYF,MAAZ;AAFwC,4CAGjCA,MAHiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1C","file":"clAdapters/jira/index.js","sourcesContent":["import Adapter from '../base/Adapter';\nimport url from 'url';\nimport request from 'request';\n\nexport default class JiraAdapter extends Adapter {\n}\n\nJiraAdapter.prototype.makeRequest = async (path) => {\n  this.protocol = 'https';\n  this.hostname = 'crosslead.atlassian.net';\n  this.apiVersion = 2;\n  this.port = null;\n  this.username = 'michelle.shu@crosslead.com';\n  this.password = 'gmaSAtN*CL13';\n\n  const uri = url.format({\n    protocol: this.protocol,\n    hostname: this.hostname,\n    port: this.port,\n    pathname: 'rest/api/' + this.apiVersion + path\n  });\n\n  const options = {\n    rejectUnauthorized: true,\n    uri: uri,\n    method: 'GET',\n    auth: {\n      user: this.username,\n      pass: this.password\n    }\n  };\n\n  return request(options);\n};\n\nJiraAdapter.prototype.getIssueHierarchy = async () => {\n  const result = await this.makeRequest('issue/createmeta');\n  console.log(result);\n  return result;\n};\n"],"sourceRoot":"/source/"}