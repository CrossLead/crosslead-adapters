{"version":3,"sources":["clAdapters/netsuite/index.js"],"names":[],"mappings":"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","file":"clAdapters/netsuite/index.js","sourcesContent":["'use strict';\r\n\r\nimport _ from 'lodash';\r\nimport util from 'util';\r\nimport BaseAdapter from '../base/Adapter';\r\nimport Fields from '../fields';\r\nimport NetSuite from 'netsuite-js';\r\n\r\nvar implementedFields = {};\r\nimplementedFields[Fields.Types.USER] = {\r\n  'department#internalId': true,\r\n  'supervisor#internalId': true\r\n};\r\nimplementedFields[Fields.Types.EXT_ENTITY] = {\r\n  'customer#balance': true,\r\n  'customer#overdueBalance': true,\r\n  'customer#daysOverdue': true\r\n};\r\n\r\n/**\r\n * NetSuiteAdapter\r\n *\r\n * `credentials` format:\r\n * ```\r\n * {\r\n *   email: 'test@test.com',\r\n *   password: 'password',\r\n *   account: 123456,\r\n *   role: 3\r\n * }\r\n * ```\r\n * @class\r\n * @return {NetSuiteAdapter}\r\n */\r\nvar NetSuiteAdapter = module.exports = function NetSuiteAdapter() {\r\n  BaseAdapter.call(this);\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  Object.defineProperty(this, 'extEntityKey', {\r\n    get: function() {\r\n      return this.credentials.account;\r\n    }\r\n  });\r\n\r\n  // SearchId cache, one per field\r\n  this._searchIds = {};\r\n\r\n  // Cache results by field type -> limit (pagesize) -> skip, e.g.:\r\n  // this._cachedDataByFieldType[Fields.Types.USER][10][3]\r\n  // represents all user records for search page size 10 starting at index 3.\r\n  // EXT_ENTITY fields are have an additional layer for entityType, e.g.:\r\n  // this._cachedDataByFieldType[Fields.Types.EXT_ENTITY]['customer'][10][3]\r\n  this._cachedDataByFieldType = {};\r\n};\r\n\r\nutil.inherits(NetSuiteAdapter, BaseAdapter);\r\n\r\n/**\r\n * @override\r\n */\r\nNetSuiteAdapter.prototype.init = function() {\r\n  var _this = this;\r\n  this._config = new NetSuite.Configuration(this.credentials);\r\n  this._service = new NetSuite.Service(this._config);\r\n  return this._service\r\n    .init()\r\n    .then(function( /*client*/ ) {\r\n      var msg = 'Successfully initialized NetSuiteAdapter for email: %s, account: %s, role: %d';\r\n      console.log(msg, _this.credentials.email, _this.credentials.account, _this.credentials.role);\r\n      return _this;\r\n    });\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nNetSuiteAdapter.prototype.reset = function() {\r\n  this._searchIds = {};\r\n  this._cachedDataByFieldType = {};\r\n  delete this._config;\r\n  delete this._service;\r\n};\r\n\r\nNetSuiteAdapter.prototype._setCacheValue = function(field, limit, skip, data) {\r\n  var fieldCache = this._cachedDataByFieldType[field.type] = this._cachedDataByFieldType[field.type] || {};\r\n\r\n  if (field.type === Fields.Types.EXT_ENTITY) {\r\n    fieldCache = this._cachedDataByFieldType[field.type][field.entityType] = this._cachedDataByFieldType[field.type][field.entityType] || {};\r\n  }\r\n\r\n  fieldCache[limit] = fieldCache[limit] || {};\r\n  fieldCache[limit][skip] = _.cloneDeep(data);\r\n};\r\n\r\nNetSuiteAdapter.prototype._getCacheValue = function(field, limit, skip) {\r\n  var fieldCache = this._cachedDataByFieldType[field.type];\r\n  if (!fieldCache) {\r\n    return undefined;\r\n  }\r\n\r\n  if (field.type === Fields.Types.EXT_ENTITY) {\r\n    fieldCache = fieldCache[field.entityType];\r\n  }\r\n  return fieldCache &&\r\n    fieldCache[limit] &&\r\n    fieldCache[limit][skip];\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nNetSuiteAdapter.prototype.getFieldData = function(field, query) {\r\n  console.log(field);\r\n  var _this = this;\r\n  return new Promise(function(resolve, reject) {\r\n    query = query || {};\r\n\r\n    var preferences = new NetSuite.Search.SearchPreferences();\r\n    preferences.pageSize = query.limit || 10;\r\n    _this._service.setSearchPreferences(preferences);\r\n\r\n    if (!implementedFields[field.type] || !implementedFields[field.type][field.extId]) {\r\n      return reject(new Error('Unknown field or retrieval NYI by NetSuiteAdapter:', field));\r\n    }\r\n\r\n    // Cache hit?\r\n    var cached = _this._getCacheValue(field, preferences.pageSize, query.skip);\r\n    if (cached) {\r\n      return resolve(cached);\r\n    }\r\n\r\n    var pageIndex, search;\r\n    if (field.type === Fields.Types.USER) {\r\n      if (query.skip) {\r\n        if (!_this._searchIds[field.extId]) {\r\n          throw new Error('NetSuite paged searches must start with an initial search to generate a search session');\r\n        }\r\n        // Round down then add 1 since netsuite page indices are one-based\r\n        pageIndex = Math.floor(query.skip / preferences.pageSize) + 1;\r\n        console.log('searchMoreWithId with pageIndex \"%d\"', pageIndex);\r\n        return _this._service.searchMoreWithId(_this._searchIds[field.extId], pageIndex)\r\n          .then(function(result) {\r\n            var data = {\r\n              count: result.searchResult.totalRecords,\r\n              results: result.searchResult.recordList.record\r\n            };\r\n            _this._setCacheValue(field, preferences.pageSize, query.skip, data);\r\n            return resolve(data);\r\n          });\r\n      } else {\r\n        // No criteria right now\r\n        search = new NetSuite.Search.EmployeeSearchBasic();\r\n        return _this._service.search(search)\r\n          .then(function(result) {\r\n            if (result.searchResult.totalPages > 1) {\r\n              _this._searchIds[field.extId] = result.searchResult.searchId;\r\n            }\r\n\r\n            var data = {\r\n              count: result.searchResult.totalRecords,\r\n              results: result.searchResult.recordList.record\r\n            };\r\n            _this._setCacheValue(field, preferences.pageSize, query.skip, data);\r\n            return resolve(data);\r\n          });\r\n      }\r\n    } else if (field.type === Fields.Types.EXT_ENTITY) {\r\n      if (field.entityType === 'customer') {\r\n        if (query.skip) {\r\n          if (!_this._searchIds[field.extId]) {\r\n            throw new Error('NetSuite paged searches must start with an initial search to generate a search session');\r\n          }\r\n          // Round down then add 1 since netsuite page indices are one-based\r\n          pageIndex = Math.floor(query.skip / preferences.pageSize) + 1;\r\n          console.log('searchMoreWithId with pageIndex \"%d\"', pageIndex);\r\n          return _this._service.searchMoreWithId(_this._searchIds[field.extId], pageIndex)\r\n            .then(function(result) {\r\n              var data = {\r\n                count: result.searchResult.totalRecords,\r\n                results: result.searchResult.searchRowList.searchRow\r\n              };\r\n              _this._setCacheValue(field, preferences.pageSize, query.skip, data);\r\n              return resolve(data);\r\n            });\r\n        } else {\r\n          // No criteria right now\r\n          search = new NetSuite.Search.CustomerSearchAdvanced();\r\n          search.columns = new NetSuite.Search.CustomerSearchRow();\r\n          search.columns.basic = new NetSuite.Search.CustomerSearchRowBasic();\r\n\r\n          // For now, always include all SearchColumn fields since storing an extra field\r\n          // is far less costly than having to do another roundtrip to retrieve another field\r\n          var entityIdField = new NetSuite.Search.Fields.SearchColumnStringField();\r\n          entityIdField.field = 'entityId';\r\n          search.columns.basic.searchColumnFields.push(entityIdField);\r\n\r\n          var internalIdField = new NetSuite.Search.Fields.SearchColumnSelectField();\r\n          internalIdField.field = 'internalId';\r\n          search.columns.basic.searchColumnFields.push(internalIdField);\r\n\r\n          var balanceField = new NetSuite.Search.Fields.SearchColumnDoubleField();\r\n          balanceField.field = 'balance';\r\n          search.columns.basic.searchColumnFields.push(balanceField);\r\n\r\n          var overdueBalanceField = new NetSuite.Search.Fields.SearchColumnDoubleField();\r\n          overdueBalanceField.field = 'overdueBalance';\r\n          search.columns.basic.searchColumnFields.push(overdueBalanceField);\r\n\r\n          var daysOverdueField = new NetSuite.Search.Fields.SearchColumnLongField();\r\n          daysOverdueField.field = 'daysOverdue';\r\n          search.columns.basic.searchColumnFields.push(daysOverdueField);\r\n\r\n          return _this._service.search(search)\r\n            .then(function(result) {\r\n              if (result.searchResult.totalPages > 1) {\r\n                _this._searchIds[field.extId] = result.searchResult.searchId;\r\n              }\r\n\r\n              var data = {\r\n                count: result.searchResult.totalRecords,\r\n                results: result.searchResult.searchRowList.searchRow\r\n              };\r\n              _this._setCacheValue(field, preferences.pageSize, query.skip, data);\r\n              return resolve(data);\r\n            });\r\n        }\r\n      } else {\r\n        return reject(new Error('Unknown EXT_ENTITY entityType:', field.entityType));\r\n      }\r\n    }\r\n  });\r\n};\r\n"],"sourceRoot":"/source/"}