{"version":3,"sources":["clAdapters/office365/calendar/index.js"],"names":[],"mappings":"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","file":"clAdapters/office365/calendar/index.js","sourcesContent":["import moment                     from 'moment';\r\nimport _                          from 'lodash';\r\nimport Office365BaseAdapter       from '../base/Adapter';\r\n\r\n\r\n/**\r\n * Office 365 Calendar adapter\r\n */\r\nexport default class Office365CalendarAdapter extends Office365BaseAdapter {\r\n\r\n  // collect these fields always...\r\n  static baseFields = [\r\n    'Id',\r\n    'Attendees',\r\n    'Calendar',\r\n    'Categories',\r\n    'DateTimeCreated',\r\n    'DateTimeLastModified',\r\n    'End',\r\n    'EndTimeZone',\r\n    'HasAttachments',\r\n    'Importance',\r\n    'iCalUID',\r\n    'IsAllDay',\r\n    'IsCancelled',\r\n    'IsOrganizer',\r\n    'Location',\r\n    'Organizer',\r\n    'Recurrence',\r\n    'ResponseRequested',\r\n    'ResponseStatus',\r\n    'SeriesMasterId',\r\n    'ShowAs',\r\n    'Start',\r\n    'StartTimeZone',\r\n    'Subject',\r\n    'Type',\r\n    'WebLink'\r\n  ]\r\n\r\n  // convert the names of the api response data\r\n  static fieldNameMap = {\r\n    // Desired...                          // Given...\r\n    'eventId':                             'Id',\r\n    'attendees':                           'Attendees',\r\n    'calendarName':                        'Calendar',\r\n    'categories':                          'Categories',\r\n    'dateTimeCreated':                     'DateTimeCreated',\r\n    'dateTimeLastModified':                'DateTimeLastModified',\r\n    'attendeeAddress':                     'EmailAddress.Address',\r\n    'attendeeName':                        'EmailAddress.Name',\r\n    'hasAttachments':                      'HasAttachments',\r\n    'importance':                          'Importance',\r\n    'iCalUID':                             'iCalUID',\r\n    'allDay':                              'IsAllDay',\r\n    'canceled':                            'IsCancelled',\r\n    'isOrganizer':                         'IsOrganizer',\r\n    'locationName':                        'Location.DisplayName',\r\n    'locationAddressStreet':               'Location.Address.Street',\r\n    'locationAddressCity':                 'Location.Address.City',\r\n    'locationAddressState':                'Location.Address.State',\r\n    'locationAddressCountryOrRegion':      'Location.Address.CountryOrRegion',\r\n    'locationCoordinatesAccuracy':         'Location.Coordinates.Accuracy',\r\n    'locationCoordinatesAltitude':         'Location.Coordinates.Altitude',\r\n    'locationCoordinatesAltitudeAccuracy': 'Location.Coordinates.AltitudeAccuracy',\r\n    'locationCoordinatesLatitude':         'Location.Coordinates.Latitude',\r\n    'locationCoordinatesLongitude':        'Location.Coordinates.Longitude',\r\n    'organizerName':                       'Organizer.EmailAddress.Name',\r\n    'organizerEmail':                      'Organizer.EmailAddress.Address',\r\n    'recurrance':                          'Recurrance',\r\n    'responseRequested':                   'ResponseRequested',\r\n    'responseStatus':                      'ResponseStatus',\r\n    'seriesMasterId':                      'SeriesMasterId',\r\n    'showAs':                              'ShowAs',\r\n    'dateTimeStart':                       'Start',\r\n    'startTimeZone':                       'StartTimeZone',\r\n    'dateTimeEnd':                         'End',\r\n    'endTimeZone':                         'EndTimeZone',\r\n    'subject':                             'Subject',\r\n    'type':                                'Type',\r\n    'url':                                 'WebLink'\r\n  }\r\n\r\n\r\n  async getBatchData(userProfiles, filterStartDate, filterEndDate, additionalFields) {\r\n\r\n    const { fieldNameMap } = this.constructor,\r\n          dataAdapterRunStats   = {\r\n            emails: userProfiles,\r\n            filterStartDate,\r\n            filterEndDate,\r\n            success: false,\r\n            runDate: moment().utc().toDate()\r\n          };\r\n\r\n    try {\r\n\r\n      const eventData = await* userProfiles.map(userProfile => this.getUserData({\r\n        ...userProfile,\r\n        filterStartDate,\r\n        filterEndDate,\r\n        additionalFields,\r\n        apiType: 'events',\r\n        $filter:  ` DateTimeCreated ge ${filterStartDate.toISOString().substring(0, 10)}\r\n                      and DateTimeCreated lt ${filterEndDate.toISOString().substring(0, 10)}\r\n                  `.replace(/\\s+/g, ' ')\r\n                   .trim()\r\n      }));\r\n\r\n      // replace data keys with desired mappings...\r\n      const results = _.map(eventData, user => {\r\n        return {\r\n          ...user.userProfile,\r\n          filterStartDate:  user.filterStartDate,\r\n          filterEndDate:    user.filterEndDate,\r\n          success:          user.success,\r\n          errorMessage:     user.errorMessage,\r\n          // map data with desired key names...\r\n          data: _.map(user.data || [], originalEvent => {\r\n            const mappedEvent = {};\r\n\r\n            // change to desired names\r\n            _.each(fieldNameMap, (have, want) => {\r\n              const mapped = _.get(originalEvent, have);\r\n              if (mapped !== undefined) {\r\n                mappedEvent[want] = /^dateTime/.test(want) ? new Date(mapped) : mapped;\r\n              }\r\n            });\r\n\r\n            mappedEvent[`attendees`] = originalEvent[fieldNameMap[`attendees`]]\r\n              .map(attendee => {\r\n                return {\r\n                  address:  _.get(attendee, fieldNameMap[`attendeeAddress`]),\r\n                  name:     _.get(attendee, fieldNameMap[`attendeeName`]),\r\n                  response: _.get(attendee, 'Status')\r\n                }\r\n              });\r\n\r\n            return mappedEvent;\r\n          })\r\n        };\r\n      });\r\n\r\n      // return results and success!\r\n      return {\r\n        ...dataAdapterRunStats,\r\n        results,\r\n        success: true\r\n      };\r\n\r\n    } catch (errorMessage) {\r\n      console.log(errorMessage.stack);\r\n      console.log('Office365 GetBatchData Error: ' + JSON.stringify(errorMessage));\r\n      return { ...dataAdapterRunStats, errorMessage };\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":"/source/"}