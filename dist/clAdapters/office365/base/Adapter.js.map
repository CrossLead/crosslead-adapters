{"version":3,"sources":["clAdapters/office365/base/Adapter.js"],"names":[],"mappings":"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","file":"clAdapters/office365/base/Adapter.js","sourcesContent":["import uuid                       from 'node-uuid';\nimport crypto                     from 'crypto';\nimport request                    from 'request-promise';\nimport moment                     from 'moment';\nimport _                          from 'lodash';\nimport Adapter                    from '../../base/Adapter';\nimport Office365BaseService       from './Service';\nimport Office365BaseConfiguration from './Configuration';\n\n\n/**\n * Common reset, runConnectionTest, and getAccessToken methods...\n */\nexport default class Office365BaseAdapter extends Adapter {\n\n\n  reset() {\n    delete this._config;\n    delete this._service;\n    return this;\n  }\n\n  async init() {\n    this._config  = new Office365BaseConfiguration(this.credentials)\n    this._service = new Office365BaseService(this._config);\n    await this._service.init();\n    console.log(`Successfully initialized ${this.constructor.name} for email: ${this.credentials.email}`);\n    return this;\n  }\n\n\n  async runConnectionTest(connectionData) {\n    this._config = new Office365BaseConfiguration(connectionData.credentials);\n\n    const today           = () => moment().utc().startOf('day'),\n          filterStartDate = today().add(-1, 'days').toDate(),\n          filterEndDate   = today().toDate(),\n          data            = await this.getBatchData(\n                              [this._config.credentials.email],\n                              filterStartDate,\n                              filterEndDate,\n                              ''\n                            );\n\n    //to see if it really worked, we need to pass in the first result\n    return data.success && data.results[0] ? data.results[0]: data;\n  }\n\n\n  async getAccessToken() {\n\n    if (this.accessToken && this.accessTokenExpires > new Date()) {\n      return this.accessToken;\n    }\n\n    const {\n      credentials : {\n        clientId,\n        tenantId,\n        certificate,\n        certificateThumbprint\n      },\n      options : {\n        apiVersion\n      }\n    } = this._config;\n\n    const tokenRequestUrl = `https://login.microsoftonline.com/${tenantId}/oauth2/token?api-version=${apiVersion}`;\n\n    const jwtHeader = {\n      'alg': 'RS256',\n      'x5t': certificateThumbprint\n    };\n\n    // expire token in one hour\n    const accessTokenExpires = ((new Date()).getTime() + 360000) / 1000;\n\n    // grab new access token 10 seconds before expiration\n    this.accessTokenExpires = new Date(accessTokenExpires*1000 - 10000);\n\n    const jwtPayload = {\n      'aud': tokenRequestUrl,\n      'exp': accessTokenExpires,\n      'iss': clientId,\n      'jti': uuid.v4(),\n      'nbf': accessTokenExpires - 2*3600, // one hour before now\n      'sub': clientId\n    };\n\n    const encode               = header => new Buffer(JSON.stringify(header)).toString('base64'),\n          encodedJwtHeader     = encode(jwtHeader),\n          encodedJwtPayload    = encode(jwtPayload),\n          stringToSign         = encodedJwtHeader + '.' + encodedJwtPayload,\n          encodedSignedJwtInfo = crypto\n            .createSign('RSA-SHA256')\n            .update(stringToSign)\n            .sign(certificate, 'base64');\n\n    const tokenRequestFormData = {\n      client_id: clientId,\n      client_assertion_type: 'urn:ietf:params:oauth:client-assertion-type:jwt-bearer',\n      grant_type: 'client_credentials',\n      resource: 'https://outlook.office365.com/',\n      client_assertion: encodedJwtHeader + '.' + encodedJwtPayload + '.' + encodedSignedJwtInfo\n    };\n\n    const tokenRequestOptions = {\n      method: 'POST',\n      port: 443,\n      uri: tokenRequestUrl,\n      formData: tokenRequestFormData,\n    };\n\n    try {\n      const tokenData = JSON.parse(await request(tokenRequestOptions));\n      if (tokenData && tokenData.access_token) {\n        return this.accessToken = tokenData.access_token;\n      } else {\n        throw new Error('Could not get access token.');\n      }\n    } catch (tokenData) {\n      if (tokenData.name === 'StatusCodeError') {\n        const messageData = JSON.parse(\n          tokenData\n            .message\n            .replace(tokenData.statusCode + ' - ', '')\n            .replace(/\\\"/g, '\"')\n        );\n\n        throw new Error(messageData);\n      } else {\n        throw new Error(tokenData);\n      }\n    }\n  }\n\n\n  async getUserData(options, userData, pageToGet=1) {\n\n    const {\n      email,\n      filterStartDate,\n      filterEndDate,\n      additionalFields,\n      $filter,\n      apiType,\n      maxPages = 20,\n      recordsPerPage = 25\n    } = options;\n\n    // accumulation of data\n    userData = userData || { email, filterStartDate, filterEndDate };\n\n    const accessToken          = await this.getAccessToken(),\n          { apiVersion }       = this._config.options,\n          skip                 = ((pageToGet -1) * recordsPerPage) + 1,\n          // extract static property...\n          { baseFields }       = this.constructor,\n          // parameters to query email with...\n          params               = {\n            $filter,\n            $top:     recordsPerPage,\n            $skip:    skip,\n            $select:  baseFields.join(',') + (additionalFields ? `,${additionalFields}`: ''),\n          };\n\n    // format parameters for url\n    const urlParams = _(params)\n      .map((value, key) => `${key}=${value}`)\n      .join('&');\n\n    const requestOptions = {\n      method: 'GET',\n      uri: `https://outlook.office365.com/api/v${apiVersion}/users('${email}')/${apiType}?${urlParams}`,\n      headers : {\n        Authorization: `Bearer ${accessToken}`,\n        Accept:        'application/json;odata.metadata=none'\n      }\n    };\n\n    try {\n      userData.success = true;\n\n      const { value: records } = JSON.parse(await request(requestOptions)) || {};\n\n      if (records && pageToGet === 1) {\n        userData.data = records;\n      }\n\n      if (records && pageToGet > 1) {\n        userData.data.push(...records);\n      }\n\n      // if the returned results are the maximum number of records per page,\n      // we are not done yet, so recurse...\n      if (records.length === recordsPerPage && pageToGet <= maxPages) {\n        return this.getUserData(options, userData, pageToGet + 1);\n      } else {\n        return userData;\n      }\n\n    } catch (err) {\n      Object.assign(userData, {\n        success: false,\n        errorMessage: err.name !== 'StatusCodeError' ?\n                        JSON.stringify(err)          :\n                        JSON.parse(\n                              err.message\n                                 .replace(err.statusCode + ' - ', '')\n                                 .replace(/\\\"/g, '\"')\n                            )\n                            .message\n      });\n      return true;\n    }\n\n  }\n\n}\n"],"sourceRoot":"/source/"}