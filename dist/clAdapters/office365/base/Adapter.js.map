{"version":3,"sources":["clAdapters/office365/base/Adapter.js"],"names":[],"mappings":"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","file":"clAdapters/office365/base/Adapter.js","sourcesContent":["import uuid                       from 'node-uuid';\r\nimport crypto                     from 'crypto';\r\nimport request                    from 'request-promise';\r\nimport moment                     from 'moment';\r\nimport _                          from 'lodash';\r\nimport Adapter                    from '../../base/Adapter';\r\nimport Office365BaseService       from './Service';\r\nimport Office365BaseConfiguration from './Configuration';\r\nimport fs from 'fs';\r\n\r\n/**\r\n * Common reset, runConnectionTest, and getAccessToken methods...\r\n */\r\nexport default class Office365BaseAdapter extends Adapter {\r\n\r\n\r\n  reset() {\r\n    delete this._config;\r\n    delete this._service;\r\n    return this;\r\n  }\r\n\r\n  async init() {\r\n    this._config  = new Office365BaseConfiguration(this.credentials)\r\n    this._service = new Office365BaseService(this._config);\r\n    await this._service.init();\r\n    console.log(`Successfully initialized ${this.constructor.name} for email: ${this.credentials.email}`);\r\n    return this;\r\n  }\r\n\r\n\r\n  async runConnectionTest(connectionData) {\r\n    this._config = new Office365BaseConfiguration(connectionData.credentials);\r\n\r\n    const today           = () => moment().utc().startOf('day'),\r\n          filterStartDate = today().add(-1, 'days').toDate(),\r\n          filterEndDate   = today().toDate(),\r\n          data            = await this.getBatchData(\r\n                              [ {\r\n                                email: this._config.credentials.email,\r\n                                emailAfterMapping: this._config.credentials.email\r\n                              } ],\r\n                              filterStartDate,\r\n                              filterEndDate,\r\n                              ''\r\n                            );\r\n\r\n    //to see if it really worked, we need to pass in the first result\r\n    return data.success && data.results[0] ? data.results[0]: data;\r\n  }\r\n\r\n\r\n  async getAccessToken() {\r\n\r\n    if (this.accessToken && this.accessTokenExpires > new Date()) {\r\n      return this.accessToken;\r\n    }\r\n\r\n    const {\r\n      credentials : {\r\n        clientId,\r\n        tenantId,\r\n        certificate,\r\n        certificateThumbprint\r\n      },\r\n      options : {\r\n        apiVersion\r\n      }\r\n    } = this._config;\r\n\r\n    const tokenRequestUrl = `https://login.microsoftonline.com/${tenantId}/oauth2/token?api-version=${apiVersion}`;\r\n\r\n    const jwtHeader = {\r\n      'alg': 'RS256',\r\n      'x5t': certificateThumbprint\r\n    };\r\n\r\n    // expire token in one hour\r\n    const accessTokenExpires = ((new Date()).getTime() + 360000) / 1000;\r\n\r\n    // grab new access token 10 seconds before expiration\r\n    this.accessTokenExpires = new Date(accessTokenExpires*1000 - 10000);\r\n\r\n    const jwtPayload = {\r\n      'aud': tokenRequestUrl,\r\n      'exp': accessTokenExpires,\r\n      'iss': clientId,\r\n      'jti': uuid.v4(),\r\n      'nbf': accessTokenExpires - 2*3600, // one hour before now\r\n      'sub': clientId\r\n    };\r\n\r\n    const encode               = header => new Buffer(JSON.stringify(header)).toString('base64'),\r\n          encodedJwtHeader     = encode(jwtHeader),\r\n          encodedJwtPayload    = encode(jwtPayload),\r\n          stringToSign         = encodedJwtHeader + '.' + encodedJwtPayload,\r\n          encodedSignedJwtInfo = crypto\r\n            .createSign('RSA-SHA256')\r\n            .update(stringToSign)\r\n            .sign(certificate, 'base64');\r\n\r\n    const tokenRequestFormData = {\r\n      client_id: clientId,\r\n      client_assertion_type: 'urn:ietf:params:oauth:client-assertion-type:jwt-bearer',\r\n      grant_type: 'client_credentials',\r\n      resource: 'https://outlook.office365.com/',\r\n      client_assertion: encodedJwtHeader + '.' + encodedJwtPayload + '.' + encodedSignedJwtInfo\r\n    };\r\n\r\n    const tokenRequestOptions = {\r\n      method: 'POST',\r\n      port: 443,\r\n      uri: tokenRequestUrl,\r\n      formData: tokenRequestFormData,\r\n    };\r\n\r\n    try {\r\n      const tokenData = JSON.parse(await request(tokenRequestOptions));\r\n      if (tokenData && tokenData.access_token) {\r\n        return this.accessToken = tokenData.access_token;\r\n      } else {\r\n        throw new Error('Could not get access token.');\r\n      }\r\n    } catch (tokenData) {\r\n      if (tokenData.name === 'StatusCodeError') {\r\n        const messageData = JSON.parse(\r\n          tokenData\r\n            .message\r\n            .replace(tokenData.statusCode + ' - ', '')\r\n            .replace(/\\\"/g, '\"')\r\n        );\r\n\r\n        throw new Error(messageData);\r\n      } else {\r\n        throw new Error(tokenData);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  async getUserData(options, userData, pageToGet=1) {\r\n    const {\r\n      userProfile,\r\n      filterStartDate,\r\n      filterEndDate,\r\n      additionalFields,\r\n      $filter,\r\n      apiType,\r\n      maxPages = 20,\r\n      recordsPerPage = 25\r\n    } = options;\r\n\r\n    // accumulation of data\r\n    userData = userData || { userProfile, filterStartDate, filterEndDate };\r\n\r\n    // console.log('s');\r\n    // console.log(filterStartDate);\r\n    // console.log('e');\r\n    // console.log(filterEndDate);\r\n\r\n    const accessToken          = await this.getAccessToken(),\r\n          { apiVersion }       = this._config.options,\r\n          skip                 = (pageToGet - 1) * recordsPerPage,\r\n          // extract static property...\r\n          { baseFields }       = this.constructor,\r\n          // parameters to query email with...\r\n          params               = {\r\n            $filter,\r\n            startDateTime: filterStartDate.toISOString(),\r\n            endDateTime: filterEndDate.toISOString(),\r\n            $top:     recordsPerPage,\r\n            $skip:    skip,\r\n            //$select:  baseFields.join(',') + (additionalFields ? `,${additionalFields}`: ''),\r\n          };\r\n\r\n    // format parameters for url\r\n    const urlParams = _(params)\r\n      .map((value, key) => `${key}=${value}`)\r\n      .join('&');\r\n\r\n    const requestOptions = {\r\n      method: 'GET',\r\n      uri: `https://outlook.office365.com/api/v${apiVersion}/users('${userProfile.emailAfterMapping}')/${apiType}?${urlParams}`,\r\n      headers : {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        Accept:        'application/json;odata.metadata=none'\r\n      }\r\n    };\r\n\r\n    try {\r\n      userData.success = true;\r\n      console.log('START GET');\r\n      console.log(requestOptions.uri);\r\n      const { value: records } = JSON.parse(await request(requestOptions)) || {};\r\n      const e = userProfile.emailAfterMapping;\r\n      console.log('END GET');\r\n      //console.log(records);\r\n      console.log('FFFFFFFFFFFFFFF888888888888');\r\n\r\n      if(userProfile.getAttachments && records.length) {\r\n        for(var recIter = 0; recIter < records.length; recIter++) {\r\n          const rec = records[recIter];\r\n          const mid = rec.Id || '';\r\n          rec.attachments = [];\r\n          const attachmentOptions = {\r\n            method: 'GET',\r\n            uri: `https://outlook.office365.com/api/v${apiVersion}/users('${e}')/messages/${mid}/attachments`,\r\n            headers : {\r\n              Authorization: `Bearer ${accessToken}`,\r\n              Accept:        'application/json;odata.metadata=none'\r\n            }\r\n          };\r\n          const attachmentData = JSON.parse(await request(attachmentOptions)) || {};\r\n          if(attachmentData.value && attachmentData.value.length > 0) {\r\n            rec.attachments = attachmentData.value;\r\n          }\r\n        }\r\n      }\r\n      console.log('FFFFFFFFFFFFFFF88899999999999999');\r\n      // console.log(records.length);\r\n      // console.log(mid);\r\n      // console.log('444444444444444444444444b');\r\n      // const attachments = JSON.parse(await request(attachmentOptions)) || {};\r\n      // console.log('5555555555555555555555555');\r\n      // console.log(records[0]);\r\n      // console.log('---------------------------');\r\n      // //console.log(attachments);\r\n      // console.log('---------------------------');\r\n      // fs.writeFileSync('bbb.txt', JSON.stringify(attachments));\r\n\r\n      // const fBuffer = new Buffer(attachments.value[0].ContentBytes, 'base64');\r\n      // fs.writeFileSync('bbb.png', fBuffer);\r\n      // console.log('---------------------------232332');\r\n      if (records && pageToGet === 1) {\r\n        userData.data = records;\r\n      }\r\n\r\n      if (records && pageToGet > 1) {\r\n        userData.data.push(...records);\r\n      }\r\n\r\n      // if the returned results are the maximum number of records per page,\r\n      // we are not done yet, so recurse...\r\n      if (records.length === recordsPerPage && pageToGet <= maxPages) {\r\n        return this.getUserData(options, userData, pageToGet + 1);\r\n      } else {\r\n        return userData;\r\n      }\r\n\r\n    } catch (err) {\r\n      Object.assign(userData, {\r\n        success: false,\r\n        errorMessage: err.name !== 'StatusCodeError' ?\r\n                        JSON.stringify(err)          :\r\n                        JSON.parse(\r\n                              err.message\r\n                                 .replace(err.statusCode + ' - ', '')\r\n                                 .replace(/\\\"/g, '\"')\r\n                            )\r\n                            .message\r\n      });\r\n      return true;\r\n    }\r\n\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}