{"version":3,"sources":["clAdapters/office365/mail/index.js"],"names":[],"mappings":"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","file":"clAdapters/office365/mail/index.js","sourcesContent":["import moment                     from 'moment';\r\nimport _                          from 'lodash';\r\nimport Office365BaseAdapter       from '../base/Adapter';\r\n\r\n\r\n/**\r\n * Office 365 Mail adapter\r\n */\r\nexport default class Office365MailAdapter extends Office365BaseAdapter {\r\n\r\n\r\n  // collect these fields always...\r\n  static baseFields = [\r\n    'Id',\r\n    'Categories',\r\n    'DateTimeCreated',\r\n    'Subject',\r\n    'Importance',\r\n    'HasAttachments',\r\n    'ParentFolderId',\r\n    'From',\r\n    'Sender',\r\n    'ToRecipients',\r\n    'CcRecipients',\r\n    'BccRecipients',\r\n    'ReplyTo',\r\n    'ConversationId',\r\n    'DateTimeReceived',\r\n    'DateTimeSent',\r\n    'IsDeliveryReceiptRequested',\r\n    'IsReadReceiptRequested',\r\n    'IsRead'\r\n  ]\r\n\r\n\r\n  // convert the names of the api response data\r\n  static fieldNameMap = {\r\n    // Desired...                 // Given...\r\n    'emails':                     'value',\r\n    'messageId':                  'Id',\r\n    'conversationId':             'ConversationId',\r\n    'dateTimeSent':               'DateTimeSent',\r\n    'dateTimeReceived':           'DateTimeReceived',\r\n    'importance':                 'Importance',\r\n    'folderId':                   'ParentFolderId',\r\n    'categories':                 'Categories',\r\n    'contentType':                'Body.ContentType',\r\n    'subject':                    'Subject',\r\n    'bodyPreview':                'BodyPreview',\r\n    'body':                       'Body.Content',\r\n    'fromAddress':                'From.EmailAddress.Address',\r\n    'fromName':                   'From.EmailAddress.Name',\r\n    'toRecipients':               'ToRecipients',\r\n    'toRecipientAddress':         'EmailAddress.Address',\r\n    'toRecipientName':            'EmailAddress.Name',\r\n    'ccRecipients':               'CcRecipients',\r\n    'ccRecipientAddress':         'EmailAddress.Address',\r\n    'ccRecipientName':            'EmailAddress.Name',\r\n    'bccRecipients':              'BccRecipients',\r\n    'bccRecipientAddress':        'EmailAddress.Address',\r\n    'bccRecipientName':           'EmailAddress.Name',\r\n    'isDeliveryReceiptRequested': 'IsDeliveryReceiptRequested',\r\n    'isReadReceiptRequested':     'IsReadReceiptRequested',\r\n    'hasAttachments':             'HasAttachments',\r\n    'isDraft':                    'IsDraft',\r\n    'isRead':                     'IsRead',\r\n    'attachments':                'attachments', \r\n  }\r\n\r\n\r\n  async getBatchData(userProfiles, filterStartDate, filterEndDate, additionalFields) {\r\n\r\n    const { fieldNameMap } = this.constructor,\r\n          dataAdapterRunStats   = {\r\n            userProfiles,\r\n            filterStartDate,\r\n            filterEndDate,\r\n            success: false,\r\n            runDate: moment().utc().toDate()\r\n          };\r\n\r\n    try {\r\n\r\n      const emailData = await* userProfiles.map(userProfile => {\r\n        return this.getUserData({\r\n          userProfile,\r\n          filterStartDate,\r\n          filterEndDate,\r\n          additionalFields,\r\n          apiType:  'messages',\r\n          $filter:  ` IsDraft eq false\r\n                        and DateTimeSent ge ${filterStartDate.toISOString().substring(0, 10)}\r\n                        and DateTimeSent lt ${filterEndDate.toISOString().substring(0, 10)}\r\n                    `.replace(/\\s+/g, ' ')\r\n                     .trim()\r\n        });\r\n      });\r\n\r\n      // replace data keys with desired mappings...\r\n      const results = _.map(emailData, user => {\r\n        const emailArray = (user.success && user.data) || [];\r\n        return {\r\n          ...user.userProfile,\r\n          filterStartDate:  user.filterStartDate,\r\n          filterEndDate:    user.filterEndDate,\r\n          success:          user.success,\r\n          errorMessage:     user.errorMessage,\r\n          // map data with desired key names...\r\n          data: _.map(emailArray, originalEmailMessage => {\r\n            const mappedEmailMessage = {};\r\n\r\n            // change to desired names\r\n            _.each(fieldNameMap, (have, want) => {\r\n              const mapped = _.get(originalEmailMessage, have);\r\n              if (mapped !== undefined) {\r\n                mappedEmailMessage[want] = /^dateTime/.test(want) ? new Date(mapped) : mapped;\r\n              }\r\n            });\r\n\r\n            // grab info from different correspondent types...\r\n            // (since we're using an array literal here, 'for of' syntax will compile reasonably)\r\n            for (const type of ['to', 'cc', 'bcc']) {\r\n              const key = `${type}Recipient`;\r\n              mappedEmailMessage[`${key}s`] = originalEmailMessage[fieldNameMap[`${key}s`]]\r\n                .map(recipient => {\r\n                  return {\r\n                    address: _.get(recipient, fieldNameMap[`${key}Address`]),\r\n                    name:    _.get(recipient, fieldNameMap[`${key}Name`])\r\n                  }\r\n                });\r\n            }\r\n\r\n            return mappedEmailMessage;\r\n          })\r\n        };\r\n      });\r\n\r\n      // return results and success!\r\n      return {\r\n        ...dataAdapterRunStats,\r\n        results,\r\n        success: true\r\n      };\r\n\r\n    } catch (errorMessage) {\r\n      console.log(errorMessage.stack);\r\n      console.log('Office365 GetBatchData Error: ' + JSON.stringify(errorMessage));\r\n      return { ...dataAdapterRunStats, errorMessage };\r\n    }\r\n\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}