{"version":3,"sources":["clAdapters/slack/index.js"],"names":["SlackAdapter","method","params","paramString","p","resolve","reject","get","baseApiUrl","err","resp","body","statusCode","JSON","parse"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,Y,WAQlB,yBAAU,IAAV,C;;;;;;;;;;;;AAqBD;2BACO,CAAE;;;;;AAzBT;;;uCAI0BC,M,EAAqB;AAAA;;AAAA,UAAbC,MAAa,uEAAJ,EAAI;;AAC7C,UAAIC,cAAc,EAAlB;AACA,WAAK,IAAMC,CAAX,IAAgBF,MAAhB,EAAwB;AACtBC,uBAAkBC,CAAlB,SAAuBF,OAAOE,CAAP,CAAvB;AACD;;AAED,aAAO,sBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,0BAAQC,GAAR,CACK,OAAKC,UADV,SACwBP,MADxB,SACkCE,WADlC,EAEE,UAACM,GAAD,EAAMC,IAAN,EAAYC,IAAZ,EAAqB;AACnB,cAAI,CAACF,GAAD,IAAQC,KAAKE,UAAL,KAAoB,GAAhC,EAAqC;AACnCP,oBAAQQ,KAAKC,KAAL,CAAWH,IAAX,CAAR;AACD,WAFD,MAEO;AACLL,mBAAOG,GAAP;AACD;AACF,SARH;AAUD,OAXM,CAAP;AAYD;;;8BAxBMD,U,GAAa,uB;kBAHDR,Y","file":"clAdapters/slack/index.js","sourcesContent":["import Adapter from '../base/Adapter';\nimport request from 'request';\nimport rateLimit from '../../utils/rate-limit';\n\nexport default class SlackAdapter extends Adapter {\n\n\n  static baseApiUrl = 'https://slack.com/api';\n\n  /**\n   * Rate limit (at prototype level) slack api calls to once per second.\n   */\n  @rateLimit(1000)\n  static callSlackApiMethod(method, params = {}) {\n    let paramString = '';\n    for (const p in params) {\n      paramString += `${p}=${params[p]}&`;\n    }\n\n    return new Promise((resolve, reject) => {\n      request.get(\n        `${this.baseApiUrl}/${method}?${paramString}`,\n        (err, resp, body) => {\n          if (!err && resp.statusCode === 200) {\n            resolve(JSON.parse(body));\n          } else {\n            reject(err);\n          }\n        }\n      );\n    });\n  }\n\n  // null init function...\n  init() {}\n\n}\n"],"sourceRoot":"/source/"}