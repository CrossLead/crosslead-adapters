{"version":3,"sources":["clAdapters/adapterFactory.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,YAAY,GAAG,OAAO,CAAC,gBAAgB,CAAC;IAC1C,aAAa,GAAG,OAAO,CAAC,iBAAiB,CAAC;IAC1C,eAAe,GAAG,OAAO,CAAC,mBAAmB,CAAC;IAC9C,gBAAgB,GAAG,OAAO,CAAC,oBAAoB,CAAC;IAChD,aAAa,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;;;;;;;;AAQ7C,IAAI,cAAc,GAAG,MAAM,CAAC,OAAO,GAAG,SAAS,cAAc,GAAG,EAAE,CAAC;;;;;;;AAOnE,cAAc,CAAC,aAAa,GAAG,UAAS,IAAI,EAAE;AAC5C,UAAQ,IAAI;AACV,SAAK,YAAY,CAAC,MAAM;AACtB,YAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;AAAA,AAChE,SAAK,YAAY,CAAC,QAAQ;AACxB,aAAO,IAAI,eAAe,EAAE,CAAC;AAAA,AAC/B,SAAK,YAAY,CAAC,OAAO;AACvB,aAAO,IAAI,aAAa,EAAE,CAAC;AAAA,AAC7B,SAAK,YAAY,CAAC,SAAS;AACzB,aAAO,IAAI,gBAAgB,EAAE,CAAC;AAAA,AAChC,SAAK,YAAY,CAAC,MAAM;AACtB,aAAO,IAAI,aAAa,EAAE,CAAC;AAAA,AAC7B;AACE,YAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;AAAA,GACnC;CACF,CAAC","file":"clAdapters/adapterFactory.js","sourcesContent":["'use strict';\n\nvar AdapterTypes = require('./adapterTypes'),\n  CLMockAdapter = require('./clMockAdapter'),\n  NetSuiteAdapter = require('./netsuiteAdapter'),\n  Office365Adapter = require('./office365Adapter'),\n  GoogleAdapter = require('./googleAdapter');\n\n/**\n * Adapter factory\n *\n * @class\n * @return {AdapterFactory}\n */\nvar AdapterFactory = module.exports = function AdapterFactory() {};\n\n/**\n * Static factory\n * @param  {AdapterType} type\n * @return {BaseAdapter} concrete adapter subclass\n */\nAdapterFactory.createAdapter = function(type) {\n  switch (type) {\n    case AdapterTypes.CUSTOM:\n      throw new Error('Custom adapters provide their own approach');\n    case AdapterTypes.NETSUITE:\n      return new NetSuiteAdapter();\n    case AdapterTypes.CL_MOCK:\n      return new CLMockAdapter();\n    case AdapterTypes.OFFICE365:\n      return new Office365Adapter();\n    case AdapterTypes.GOOGLE:\n      return new GoogleAdapter();\n    default:\n      throw new Error('Unknown type');\n  }\n};\n"],"sourceRoot":"/source/"}