{"version":3,"sources":["clAdapters/adapterFactory.js"],"names":[],"mappings":";;;;;;;;;;;;gBAAqB,IAAI;;;;4BACJ,gBAAgB;;;;;;;;;;;IAQhB,cAAc;WAAd,cAAc;0BAAd,cAAc;;;eAAd,cAAc;;;;;;;;WAOb,uBAAC,IAAI,EAAE;AACzB,cAAQ,IAAI;AACV,aAAK,0BAAM,MAAM;AACf,gBAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;AAAA,AAChE,aAAK,0BAAM,QAAQ;AACjB,iBAAO,IAAI,cAAS,eAAe,EAAE,CAAC;AAAA,AACxC,aAAK,0BAAM,OAAO;AAChB,iBAAO,IAAI,cAAS,aAAa,EAAE,CAAC;AAAA,AACtC,aAAK,0BAAM,SAAS;AAClB,iBAAO,IAAI,cAAS,oBAAoB,EAAE,CAAC;AAAA,AAC7C,aAAK,0BAAM,kBAAkB;AAC3B,iBAAO,IAAI,cAAS,wBAAwB,EAAE,CAAC;AAAA,AACjD,aAAK,0BAAM,MAAM;AACf,iBAAO,IAAI,cAAS,aAAa,EAAE,CAAC;AAAA,AACtC,aAAK,0BAAM,eAAe;AACxB,iBAAO,IAAI,cAAS,qBAAqB,EAAE,CAAC;AAAA,AAC9C;AACE,gBAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;AAAA,OACnC;KACF;;;SA1BkB,cAAc;;;qBAAd,cAAc","file":"clAdapters/adapterFactory.js","sourcesContent":["import adapters from './';\nimport types    from './adapterTypes';\n\n/**\n * Adapter factory\n *\n * @class\n * @return {AdapterFactory}\n */\nexport default class AdapterFactory {\n\n  /**\n   * Static factory\n   * @param  {AdapterType} type\n   * @return {BaseAdapter} concrete adapter subclass\n   */\n  static createAdapter(type) {\n    switch (type) {\n      case types.CUSTOM:\n        throw new Error('Custom adapters provide their own approach');\n      case types.NETSUITE:\n        return new adapters.NetSuiteAdapter();\n      case types.CL_MOCK:\n        return new adapters.CLMockAdapter();\n      case types.OFFICE365:\n        return new adapters.Office365MailAdapter();\n      case types.OFFICE365_CALENDAR:\n        return new adapters.Office365CalendarAdapter();\n      case types.GOOGLE:\n        return new adapters.GoogleAdapter();\n      case types.GOOGLE_CALENDAR:\n        return new adapters.GoogleCalendarAdapter();\n      default:\n        throw new Error('Unknown type');\n    }\n  }\n}\n"],"sourceRoot":"/source/"}