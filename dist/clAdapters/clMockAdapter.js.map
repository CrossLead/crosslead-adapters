{"version":3,"sources":["clAdapters/clMockAdapter.js"],"names":[],"mappings":"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","file":"clAdapters/clMockAdapter.js","sourcesContent":["'use strict';\n\nvar util = require('util'),\n  BaseAdapter = require('./base/Adapter'),\n  Fields = require('./fields');\n\n/**\n * CLMockAdapter\n *\n * `credentials` should always be:\n * ```\n * {\n *   appId: '123456',\n *   apiKey: '999999'\n * }\n * ```\n * @class\n * @return {ClMockAdapter}\n */\nvar CLMockAdapter = module.exports = function CLMockAdapter() {\n  BaseAdapter.call(this);\n\n  /**\n   * @override\n   */\n  Object.defineProperty(this, 'extEntityKey', {\n    get: function() {\n      return this.credentials.appId;\n    }\n  });\n};\n\nutil.inherits(CLMockAdapter, BaseAdapter);\n\n/**\n * @override\n */\nCLMockAdapter.prototype.init = function() {\n  var _this = this;\n  var p = new Promise(function(resolve, reject) {\n    if (_this.credentials.appId === '123456' && _this.credentials.apiKey === '999999') {\n      resolve(_this);\n    } else {\n      reject('Wrong credentials, please use appId \"123456\" and apiKey \"999999\"');\n    }\n  });\n\n  return p;\n};\n\n/**\n * Reflects given field in this `result` format:\n * ```\n * {\n *   {fieldType}ExtId: rand # between 1-50,\n *   {extId}: Float (0-1.0)\n * }\n * ```\n *\n * For example, for a \"Fields.Types.USER\" field w/extId 'user#utilizationRate', would return:\n * ```\n * {\n *   userExtId: 50,\n *   'user#utilizationRate': 0.55\n * }\n * ```\n *\n * Returns between 0-50 results in pages of `query.limit` (default 5)\n * @override\n */\nCLMockAdapter.prototype.getFieldData = function(field, query) {\n  query = query || {};\n  var typeName;\n  console.log(field);\n  switch (field.type) {\n    case Fields.Types.USER:\n      typeName = 'user';\n      break;\n    case Fields.Types.GROUP:\n      typeName = 'group';\n      break;\n    default:\n      typeName = 'unknown';\n      break;\n  }\n\n  var skip = query.skip || 0;\n  if (!skip) {\n    this.numResultsToGenerate = Math.floor(Math.random() * 50);\n    console.log('CLMockAdapter: Generating %d results', this.numResultsToGenerate);\n  }\n\n  var result = {\n    count: this.numResultsToGenerate,\n    results: []\n  };\n\n  var createResult = function() {\n    var r = {};\n    r[typeName + 'ExtId'] = Math.floor(Math.random() * 3) + 1;\n    r[field.extId] = Math.random();\n    return r;\n  };\n\n  var pageSize = query.limit || 5;\n  var resultsToReturn = Math.min(pageSize, this.numResultsToGenerate - skip);\n  for (var i = 0; i < resultsToReturn; i++) {\n    result.results.push(createResult());\n  }\n\n  return new Promise(function(resolve /*,reject*/ ) {\n    resolve(result);\n  });\n};\n"],"sourceRoot":"/source/"}