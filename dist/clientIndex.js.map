{"version":3,"sources":["clientIndex.js"],"names":[],"mappings":";;;;;;;;;AASA,YAAY,CAAC;AACb,CAAC,YAAW;;;;;;AAMV,MAAI,UAAU,GAAG,EAAE,CAAC;;;AAGpB,YAAU,CAAC,MAAM,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;;AAEnD,YAAU,CAAC,aAAa,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAC;AACjE,YAAU,CAAC,YAAY,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC;;AAE/D,MAAI,CAAC,UAAU,GAAG,UAAU,CAAC;CAC9B,CAAA,CAAE,IAAI,CAAC,CAAC,YAAW;AAClB,SAAO,IAAI,KAAK,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,GAAG,MAAM,CAAA,AAAC,CAAC;CAClE,CAAA,EAAG,CAAC,CAAC","file":"clientIndex.js","sourcesContent":["/**\n * crosslead-adapters-client\n * https://github.com/CrossLead/crosslead-adapters\n *\n * Copyright (c) 2015 McChrystal Group\n *\n * @ignore\n */\n\n'use strict';\n(function() {\n  /**\n   * CLAdapters functionality available on client. Mostly a subset\n   * of server functionality like common enums\n   * @return {CLAdapters}\n   */\n  var CLAdapters = {};\n\n  // Fields namespace\n  CLAdapters.Fields = require('./clAdapters/fields');\n\n  CLAdapters.AdapterStatus = require('./clAdapters/adapterStatus');\n  CLAdapters.AdapterTypes = require('./clAdapters/adapterTypes');\n\n  this.CLAdapters = CLAdapters;\n}).call((function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n})());\n"],"sourceRoot":"/source/"}